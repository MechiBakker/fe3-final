{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\FE3\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContextGlobal = /*#__PURE__*/createContext();\nexport const initialState = {\n  theme: {\n    light: {\n      id: ''\n    },\n    dark: {\n      background: 'dark',\n      navdark: 'nav-dark',\n      textdark: 'text-dark',\n      buttondark: 'button-dark',\n      buttonmode: 'button-mode',\n      hovernav: 'hover-nav',\n      textwhite: 'text-white',\n      redline: 'red-line'\n    }\n  }\n};\n\nconst ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const url = 'https://jsonplaceholder.typicode.com/users';\n  const [data, setData] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [theme, setTheme] = useState(initialState.theme.light);\n\n  const changeTheme = () => {\n    theme === initialState.theme.light ? setTheme(initialState.theme.dark) : setTheme(initialState.theme.light);\n  };\n\n  useEffect(() => {\n    axios(url).then(res => setData(res.data)).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      data,\n      favourites,\n      setFavourites,\n      theme,\n      changeTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"yu4EqQQFfrR+n9N+RvnVTHv7gRA=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\nexport const useGlobalStates = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useGlobalStates, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useContext","axios","ContextGlobal","initialState","theme","light","id","dark","background","navdark","textdark","buttondark","buttonmode","hovernav","textwhite","redline","ContextProvider","children","url","data","setData","favorites","setFavorites","setTheme","changeTheme","then","res","catch","err","console","log","favourites","setFavourites","useGlobalStates"],"sources":["C:/Users/Dell/Desktop/FE3/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n const ContextGlobal = createContext();\r\n\r\n export const initialState = {\r\n  theme : {\r\n    light:{\r\n      id: ''\r\n    },\r\n    dark: {\r\n      background: 'dark',\r\n      navdark: 'nav-dark',\r\n      textdark: 'text-dark',\r\n      buttondark: 'button-dark',\r\n      buttonmode: 'button-mode',\r\n      hovernav: 'hover-nav',\r\n      textwhite: 'text-white',\r\n      redline: 'red-line'\r\n    }\r\n }}\r\n\r\n const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  const url = 'https://jsonplaceholder.typicode.com/users'\r\n  const [data, setData] = useState([])\r\n  const [favorites, setFavorites] = useState([])\r\n  const [theme, setTheme] = useState(initialState.theme.light)\r\n    \r\n  const changeTheme = () => {\r\n    theme === initialState.theme.light ? setTheme(initialState.theme.dark): setTheme(initialState.theme.light)\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios(url)\r\n    .then(res => setData(res.data))\r\n    .catch(err => console.log(err))\r\n  }, [])\r\n\r\n  \r\n\r\n  return (\r\n    <ContextGlobal.Provider \r\n      value = { {data, favourites, setFavourites, theme, changeTheme} }>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  )\r\n}\r\n\r\n\r\nexport default ContextProvider;\r\n\r\nexport const useGlobalStates = () => {\r\n  return useContext(ContextGlobal)\r\n}"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEC,MAAMC,aAAa,gBAAGL,aAAa,EAAnC;AAEA,OAAO,MAAMM,YAAY,GAAG;EAC3BC,KAAK,EAAG;IACNC,KAAK,EAAC;MACJC,EAAE,EAAE;IADA,CADA;IAINC,IAAI,EAAE;MACJC,UAAU,EAAE,MADR;MAEJC,OAAO,EAAE,UAFL;MAGJC,QAAQ,EAAE,WAHN;MAIJC,UAAU,EAAE,aAJR;MAKJC,UAAU,EAAE,aALR;MAMJC,QAAQ,EAAE,WANN;MAOJC,SAAS,EAAE,YAPP;MAQJC,OAAO,EAAE;IARL;EAJA;AADmB,CAArB;;AAiBP,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACzC;EAEA,MAAMC,GAAG,GAAG,4CAAZ;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACM,KAAD,EAAQmB,QAAR,IAAoBzB,QAAQ,CAACK,YAAY,CAACC,KAAb,CAAmBC,KAApB,CAAlC;;EAEA,MAAMmB,WAAW,GAAG,MAAM;IACxBpB,KAAK,KAAKD,YAAY,CAACC,KAAb,CAAmBC,KAA7B,GAAqCkB,QAAQ,CAACpB,YAAY,CAACC,KAAb,CAAmBG,IAApB,CAA7C,GAAwEgB,QAAQ,CAACpB,YAAY,CAACC,KAAb,CAAmBC,KAApB,CAAhF;EACD,CAFD;;EAIAN,SAAS,CAAC,MAAM;IACdE,KAAK,CAACiB,GAAD,CAAL,CACCO,IADD,CACMC,GAAG,IAAIN,OAAO,CAACM,GAAG,CAACP,IAAL,CADpB,EAECQ,KAFD,CAEOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFd;EAGD,CAJQ,EAIN,EAJM,CAAT;EAQA,oBACE,QAAC,aAAD,CAAe,QAAf;IACE,KAAK,EAAK;MAACT,IAAD;MAAOY,UAAP;MAAmBC,aAAnB;MAAkC5B,KAAlC;MAAyCoB;IAAzC,CADZ;IAAA,UAEGP;EAFH;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CA1BA;;GAAMD,e;;KAAAA,e;AA6BP,eAAeA,eAAf;AAEA,OAAO,MAAMiB,eAAe,GAAG,MAAM;EAAA;;EACnC,OAAOjC,UAAU,CAACE,aAAD,CAAjB;AACD,CAFM;;IAAM+B,e"},"metadata":{},"sourceType":"module"}