{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\FE3\\\\fe3-final\\\\src\\\\Components\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  //Aqui deberan implementar el form completo con sus validaciones\n  const [values, setValues] = useState({\n    fullname: \"\",\n    email: \"\"\n  });\n  const [validation, setValidation] = useState(false);\n\n  const validateName = () => {\n    let nameUser = values.name.split(\" \");\n    if (nameUser.length < 5) return alert(\"Please, enter your full name\");\n    return true;\n  };\n\n  const validateEmail = () => {\n    let emailUser = values.email.split(\"@\");\n    if (emailUser.length < 5) return alert(\"Wrong email format! It has to conatin an @ and a dot com extention\");\n    let dotCom = emailUser[1].split(\".\");\n    if (dotCom.length < 5) return alert(\"Wrong email format! It has to conatin an @ and a dot com extention\");\n    return true;\n  };\n\n  const handleChange = e => {\n    const {\n      target\n    } = e;\n    const {\n      name,\n      value\n    } = target;\n    const newValues = { ...values,\n      [name]: value\n    };\n    setValues(newValues);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let nameValidation = validateName();\n    let emailValidation = validateEmail();\n\n    if (nameValidation && emailValidation) {\n      setValidation(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        className: \"input-form\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        className: \"input-form\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-form\",\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), validation ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Thank you for your aplication \", values.name, \", we will contact you as soon as possible\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"4ozwR0AH91P5EBUSIY/gH9y75Nk=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Form","values","setValues","fullname","email","validation","setValidation","validateName","nameUser","name","split","length","alert","validateEmail","emailUser","dotCom","handleChange","e","target","value","newValues","handleSubmit","preventDefault","nameValidation","emailValidation"],"sources":["C:/Users/Dell/Desktop/FE3/fe3-final/src/Components/Form.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst Form = () => {\r\n  //Aqui deberan implementar el form completo con sus validaciones\r\n  const [values, setValues] = useState({\r\n    fullname: \"\",\r\n    email: \"\",\r\n  })\r\n\r\n  const [validation, setValidation] = useState(false)\r\n\r\n  const validateName = () => {\r\n\r\n    let nameUser = values.name.split(\" \")\r\n    if (nameUser.length < 5) return alert(\"Please, enter your full name\")\r\n    return true\r\n  }\r\n\r\n  const validateEmail = () => {\r\n\r\n    let emailUser = values.email.split(\"@\")\r\n    if (emailUser.length < 5) return alert(\"Wrong email format! It has to conatin an @ and a dot com extention\")\r\n\r\n    let dotCom = emailUser[1].split(\".\")\r\n    if (dotCom.length < 5) return alert(\"Wrong email format! It has to conatin an @ and a dot com extention\")\r\n\r\n    return true\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n\r\n    const { target } = e\r\n    const { name, value } = target\r\n\r\n    const newValues = {\r\n      ...values,\r\n      [name]:value,\r\n    }\r\n\r\n    setValues(newValues)\r\n\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault()\r\n\r\n    let nameValidation = validateName()\r\n\r\n    let emailValidation = validateEmail()\r\n\r\n    if (nameValidation && emailValidation) {\r\n      setValidation(true)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n      <label htmlFor=\"name\">Name</label>\r\n        <input type=\"text\" name=\"name\" className=\"input-form\" onChange={handleChange} />\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input type=\"text\" name=\"email\" className=\"input-form\" onChange={handleChange} />\r\n        <button type=\"submit\" className=\"btn-form\">SUBMIT</button>\r\n      </form>\r\n      {validation ? <h3>Thank you for your aplication {values.name}, we will contact you as soon as possible</h3> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAGA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC;IACnCI,QAAQ,EAAE,EADyB;IAEnCC,KAAK,EAAE;EAF4B,CAAD,CAApC;EAKA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMQ,YAAY,GAAG,MAAM;IAEzB,IAAIC,QAAQ,GAAGP,MAAM,CAACQ,IAAP,CAAYC,KAAZ,CAAkB,GAAlB,CAAf;IACA,IAAIF,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB,OAAOC,KAAK,CAAC,8BAAD,CAAZ;IACzB,OAAO,IAAP;EACD,CALD;;EAOA,MAAMC,aAAa,GAAG,MAAM;IAE1B,IAAIC,SAAS,GAAGb,MAAM,CAACG,KAAP,CAAaM,KAAb,CAAmB,GAAnB,CAAhB;IACA,IAAII,SAAS,CAACH,MAAV,GAAmB,CAAvB,EAA0B,OAAOC,KAAK,CAAC,oEAAD,CAAZ;IAE1B,IAAIG,MAAM,GAAGD,SAAS,CAAC,CAAD,CAAT,CAAaJ,KAAb,CAAmB,GAAnB,CAAb;IACA,IAAIK,MAAM,CAACJ,MAAP,GAAgB,CAApB,EAAuB,OAAOC,KAAK,CAAC,oEAAD,CAAZ;IAEvB,OAAO,IAAP;EACD,CATD;;EAWA,MAAMI,YAAY,GAAIC,CAAD,IAAO;IAE1B,MAAM;MAAEC;IAAF,IAAaD,CAAnB;IACA,MAAM;MAAER,IAAF;MAAQU;IAAR,IAAkBD,MAAxB;IAEA,MAAME,SAAS,GAAG,EAChB,GAAGnB,MADa;MAEhB,CAACQ,IAAD,GAAOU;IAFS,CAAlB;IAKAjB,SAAS,CAACkB,SAAD,CAAT;EAED,CAZD;;EAcA,MAAMC,YAAY,GAAIJ,CAAD,IAAO;IAE1BA,CAAC,CAACK,cAAF;IAEA,IAAIC,cAAc,GAAGhB,YAAY,EAAjC;IAEA,IAAIiB,eAAe,GAAGX,aAAa,EAAnC;;IAEA,IAAIU,cAAc,IAAIC,eAAtB,EAAuC;MACrClB,aAAa,CAAC,IAAD,CAAb;IACD;EAEF,CAZD;;EAcA,oBACE;IAAA,wBACE;MAAA,wBACA;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,MAAxB;QAA+B,SAAS,EAAC,YAAzC;QAAsD,QAAQ,EAAEU;MAAhE;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,OAAxB;QAAgC,SAAS,EAAC,YAA1C;QAAuD,QAAQ,EAAEA;MAAjE;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAQ,IAAI,EAAC,QAAb;QAAsB,SAAS,EAAC,UAAhC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAQGX,UAAU,gBAAG;MAAA,6CAAmCJ,MAAM,CAACQ,IAA1C;IAAA;MAAA;MAAA;MAAA;IAAA,QAAH,GAAmG,EARhH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAnED;;GAAMT,I;;KAAAA,I;AAqEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}