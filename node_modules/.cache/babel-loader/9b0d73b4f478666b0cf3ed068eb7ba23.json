{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\FE3\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useEffect, useState, useMemo, useReducer, useContext } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined); //para el cambio de tema\n\nconst [theme, setTheme] = useState(initialState.themes.light);\n\nconst changeTheme = () => {\n  if (theme === initialState.themes.light) {\n    setTheme(initialState.themes.dark);\n  } else {\n    setTheme(initialState.themes.light);\n  }\n};\n\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [dentist, setDentist] = useState([]);\n  const initialState = useMemo(() => ({\n    data: state.data,\n    theme: state.theme,\n    setData: array => {\n      dispatch({\n        type: actions.setData,\n        payload: array\n      });\n    },\n    setDarkTheme: () => {\n      dispatch({\n        type: actions.setDarkTheme\n      });\n    },\n    setLightTheme: () => {\n      dispatch({\n        type: actions.setLightTheme\n      });\n    }\n  }), [state, dispatch]);\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(res => setDentist(res.data)).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      dentist,\n      theme,\n      setTheme,\n      changeTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"ANk4zwyGFhCa096WH6ufxSgsOCI=\");\n\n_c = ContextProvider;\nexport const useContextGlobal = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useContextGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useMemo","useReducer","useContext","axios","ContextGlobal","undefined","theme","setTheme","initialState","themes","light","changeTheme","dark","ContextProvider","children","state","dispatch","reducer","dentist","setDentist","data","setData","array","type","actions","payload","setDarkTheme","setLightTheme","get","then","res","catch","err","console","log","useContextGlobal"],"sources":["C:/Users/Dell/Desktop/FE3/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useEffect, useState, useMemo, useReducer , useContext } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\n//para el cambio de tema\r\nconst [theme, setTheme] = useState(initialState.themes.light)\r\nconst changeTheme = () => {\r\n  if (theme === initialState.themes.light) {\r\n    setTheme(initialState.themes.dark);\r\n  } else {\r\n    setTheme(initialState.themes.light);\r\n  }\r\n};\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [dentist, setDentist] = useState([])\r\n\r\nconst initialState = useMemo(\r\n    () => ({\r\n      data: state.data,\r\n      theme: state.theme,\r\n      setData: (array) => {\r\n        dispatch({ type: actions.setData, payload: array });\r\n      },\r\n      setDarkTheme: () => {\r\n        dispatch({ type: actions.setDarkTheme });\r\n      },\r\n      setLightTheme: () => {\r\n        dispatch({ type: actions.setLightTheme });\r\n      },\r\n    }),\r\n    [state, dispatch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n  .then(res => setDentist(res.data))\r\n  .catch(err => console.log(err))   \r\n   }, [])\r\n\r\n\r\n  \r\n  return (\r\n    <ContextGlobal.Provider value={{dentist, theme, setTheme, changeTheme}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n  \r\n};\r\nexport const useContextGlobal = () => {\r\n  return useContext(ContextGlobal);\r\n\r\n};"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CC,OAA7C,EAAsDC,UAAtD,EAAmEC,UAAnE,QAAqF,OAArF;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAACQ,SAAD,CAAnC,C,CAEP;;AACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACS,YAAY,CAACC,MAAb,CAAoBC,KAArB,CAAlC;;AACA,MAAMC,WAAW,GAAG,MAAM;EACxB,IAAIL,KAAK,KAAKE,YAAY,CAACC,MAAb,CAAoBC,KAAlC,EAAyC;IACvCH,QAAQ,CAACC,YAAY,CAACC,MAAb,CAAoBG,IAArB,CAAR;EACD,CAFD,MAEO;IACLL,QAAQ,CAACC,YAAY,CAACC,MAAb,CAAoBC,KAArB,CAAR;EACD;AACF,CAND;;AAQA,OAAO,MAAMG,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,UAAU,CAACgB,OAAD,EAAUT,YAAV,CAApC;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,EAAD,CAAtC;EAEF,MAAMS,YAAY,GAAGR,OAAO,CACxB,OAAO;IACLoB,IAAI,EAAEL,KAAK,CAACK,IADP;IAELd,KAAK,EAAES,KAAK,CAACT,KAFR;IAGLe,OAAO,EAAGC,KAAD,IAAW;MAClBN,QAAQ,CAAC;QAAEO,IAAI,EAAEC,OAAO,CAACH,OAAhB;QAAyBI,OAAO,EAAEH;MAAlC,CAAD,CAAR;IACD,CALI;IAMLI,YAAY,EAAE,MAAM;MAClBV,QAAQ,CAAC;QAAEO,IAAI,EAAEC,OAAO,CAACE;MAAhB,CAAD,CAAR;IACD,CARI;IASLC,aAAa,EAAE,MAAM;MACnBX,QAAQ,CAAC;QAAEO,IAAI,EAAEC,OAAO,CAACG;MAAhB,CAAD,CAAR;IACD;EAXI,CAAP,CADwB,EAcxB,CAACZ,KAAD,EAAQC,QAAR,CAdwB,CAA5B;EAiBElB,SAAS,CAAC,MAAM;IACdK,KAAK,CAACyB,GAAN,CAAU,4CAAV,EACDC,IADC,CACIC,GAAG,IAAIX,UAAU,CAACW,GAAG,CAACV,IAAL,CADrB,EAEDW,KAFC,CAEKC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFZ;EAGA,CAJO,EAIL,EAJK,CAAT;EAQA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACd,OAAD;MAAUZ,KAAV;MAAiBC,QAAjB;MAA2BI;IAA3B,CAA/B;IAAA,UACGG;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAnCM;;GAAMD,e;;KAAAA,e;AAoCb,OAAO,MAAMsB,gBAAgB,GAAG,MAAM;EAAA;;EACpC,OAAOjC,UAAU,CAACE,aAAD,CAAjB;AAED,CAHM;;IAAM+B,gB"},"metadata":{},"sourceType":"module"}